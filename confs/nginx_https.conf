# -*- mode: nginx; mode: flyspell-prog; mode: autopair; ispell-local-dictionary: "american" -*-
### Nginx configuration for %(project)s

server {
    listen         80 default_server;
    server_name    %(nginx_server_name)s;
    return         301 https://$server_name$request_uri;
}

server {
    listen 443;
    server_name %(nginx_server_name)s;
    ssl on;
    ssl_certificate %(ssl_crt)s;
    ssl_certificate_key %(ssl_key)s;

    access_log /var/log/nginx/%(project)s_access.log;
    error_log /var/log/nginx/%(project)s_error.log;

    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Access-Control-Allow-Methods' 'POST, OPTIONS';

    location / {
        proxy_pass http://%(gunicorn_bind)s;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location %(deploy_static_url)s {
        root %(deploy_static_root)s/;
    }

}

server {
    listen 443;
    server_name %(nginx_socket_name)s;
    ssl on;
    ssl_certificate %(ssl_crt_socket)s;
    ssl_certificate_key %(ssl_key_socket)s;

    access_log /var/log/nginx/%(project)s_socket_access.log;
    error_log /var/log/nginx/%(project)s_socket_error.log;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;

    location /socket.io {
        proxy_pass http://%(sockets_bind)s/socket.io;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
    }

    location /websockify {
        proxy_pass http://%(websockify_bind)s/websockify;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
    }

}
